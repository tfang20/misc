import matplotlib.pyplot as plt
from matplotlib.lines import Line2D

# Custom values for the boxplots
values = [1.5, 2, 3, 4, 4.5]

# Creating the figure and axis
fig, ax = plt.subplots()

# Creating the boxplots
boxplot = ax.boxplot([values, values, values], vert=True, widths=0.5, patch_artist=True)

# Customizing the boxplot colors
colors = ['lightblue', 'lightblue', 'lightblue']
for patch, color in zip(boxplot['boxes'], colors):
    patch.set_facecolor(color)

# Adding dashed lines within each box at 2.5 and 3.5
line1 = Line2D([0.75, 2.25], [2.5, 2.5], color='red', linestyle='dashed')
line2 = Line2D([0.75, 2.25], [3.5, 3.5], color='green', linestyle='dashed')
line3 = Line2D([0.75, 2.25], [3, 3], color='blue', linestyle='dashed')

for box in boxplot['boxes']:
    # Get the vertices (coordinates) of the box
    box_coords = box.get_path().vertices
    
    # Calculate the x-coordinate of the middle of the box
    mid_x = (box_coords[0, 0] + box_coords[2, 0]) / 2
    
    # Add dashed line within each box at y-coordinate 2.5, in red color
    ax.add_line(Line2D([mid_x - 0.25, mid_x + 0.25], [2.5, 2.5], color='red', linestyle='dashed'))
    
    # Add dashed line within each box at y-coordinate 3.5, in green color
    ax.add_line(Line2D([mid_x - 0.25, mid_x + 0.25], [3.5, 3.5], color='green', linestyle='dashed'))
    
    # Add dashed line within each box at y-coordinate 3, in blue color
    ax.add_line(Line2D([mid_x - 0.25, mid_x + 0.25], [3, 3], color='blue', linestyle='dashed'))

# Setting the y-axis limits and ticks
ax.set_ylim(-5, 5)
ax.set_yticks([i / 10 for i in range(-50, 60, 10)])
ax.set_yticklabels([str(i / 10) for i in range(-50, 60, 10)])

# Setting the x-axis label
ax.set_xlabel('Box Plots')

# Adding a title
ax.set_title('Custom Vertical Box Plots with Dashed Lines Inside Boxes')

# Displaying the plot
plt.show()





import matplotlib.pyplot as plt
from matplotlib.lines import Line2D

# Custom values for the boxplots
values = [1.5, 2, 3, 4, 4.5]

# Creating the figure and axis
fig, ax = plt.subplots()

# Creating the boxplots
boxplot = ax.boxplot([values, values, values], vert=True, widths=0.5, patch_artist=True)

# Customizing the boxplot colors
colors = ['lightblue', 'lightblue', 'lightblue']
for patch, color in zip(boxplot['boxes'], colors):
    patch.set_facecolor(color)

# Adding dashed lines within each box at 2.5 and 3.5
line1 = Line2D([0.75, 2.25], [2.5, 2.5], color='red', linestyle='dashed')
line2 = Line2D([0.75, 2.25], [3.5, 3.5], color='green', linestyle='dashed')
line3 = Line2D([0.75, 2.25], [3, 3], color='blue', linestyle='dashed')

for box in boxplot['boxes']:
    # Get the vertices (coordinates) of the box
    box_coords = box.get_path().vertices
    
    # Calculate the x-coordinate of the middle of the box
    mid_x = (box_coords[0, 0] + box_coords[2, 0]) / 2
    
    # Add dashed line within each box at y-coordinate 2.5, in red color
    ax.add_line(Line2D([mid_x - 0.25, mid_x + 0.25], [2.5, 2.5], color='red', linestyle='dashed'))
    # Add value label for the middle line
    ax.text(mid_x + 0.3, 2.5, '3', color='red', fontsize=8, verticalalignment='center')

    # Add dashed line within each box at y-coordinate 3.5, in green color
    ax.add_line(Line2D([mid_x - 0.25, mid_x + 0.25], [3.5, 3.5], color='green', linestyle='dashed'))
    # Add value label for the middle line
    ax.text(mid_x + 0.3, 3.5, '4', color='green', fontsize=8, verticalalignment='center')

    # Add dashed line within each box at y-coordinate 3, in blue color
    ax.add_line(Line2D([mid_x - 0.25, mid_x + 0.25], [3, 3], color='blue', linestyle='dashed'))
    # Add value label for the middle line
    ax.text(mid_x + 0.3, 3, '3', color='blue', fontsize=8, verticalalignment='center')

# Setting the y-axis limits and ticks
ax.set_ylim(-5, 5)
ax.set_yticks([i / 10 for i in range(-50, 60, 10)])
ax.set_yticklabels([str(i / 10) for i in range(-50, 60, 10)])

# Setting the x-axis label
ax.set_xlabel('Box Plots')

# Adding a title
ax.set_title('Custom Vertical Box Plots with Dashed Lines Inside Boxes')

# Displaying the plot
plt.show()


for box in boxplot['boxes']:
    # Get the vertices (coordinates) of the box
    box_coords = box.get_path().vertices
    
    # Calculate the x-coordinate of the middle of the box
    mid_x = (box_coords[0, 0] + box_coords[2, 0]) / 2
    
    # Add value label for the top line
    ax.text(mid_x + 0.3, 4.5, '4.5', color='black', fontsize=8, verticalalignment='center')
    
    # Add value label for the bottom line
    ax.text(mid_x + 0.3, 1.5, '1.5', color='black', fontsize=8, verticalalignment='center')


in python with pandas, i have a dataframe with 3 rows and 4 columns of data. i want to iterate through the dataframe, saving each rows contents into a unique array. it should create 3 unique arrays, each with length 4.

import pandas as pd
import numpy as np

# Example DataFrame
df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9], 'D': [10, 11, 12]})

# Initialize an empty list to store the arrays
arrays = []

# Iterate through each row in the DataFrame
for _, row in df.iterrows():
    # Convert the row to a numpy array
    arr = np.array(row)

    # Append the array to the list
    arrays.append(arr)

# Display the arrays
for arr in arrays:
    print(arr)
