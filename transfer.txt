import pandas as pd
from premailer import transform

# Assuming you have a DataFrame called 'df' with labels in column 1 and rows 1 to 5
# and numerical values in rows 7 to 9 (excluding column 1)

# Create a DataFrame style function to apply custom coloring
def color_cells(val):
    if pd.notnull(val) and val != 0:
        if val > 0:
            return 'background-color: rgba(0, 255, 0, {});'.format(abs(val)/5)
        else:
            return 'background-color: rgba(255, 0, 0, {});'.format(abs(val)/5)
    else:
        return ''

# Apply the style function to the DataFrame (for visualization)
styled_df = df.style.applymap(color_cells, subset=pd.IndexSlice[7:10, df.columns[1:]])

# Convert the styled DataFrame to HTML with CSS styles
styled_html_with_css = styled_df.to_html()

# Convert the CSS styles to inline styles using premailer
styled_html_with_inline_styles = transform(styled_html_with_css)

# Now 'styled_html_with_inline_styles' contains the HTML representation of your DataFrame
# with custom cell coloring for rows 7 to 9 and inline CSS styles

# Use 'styled_html_with_inline_styles' in the email body
mail = createitem(0)
mail.htmlbody = styled_html_with_inline_styles
